# These keybinds are taken from JaKooLit dotfiles configuration (https://github.com/JaKooLit)
# Im using this as a reference to set up my own Hyprland environment variables.
# I want to make it easier to move, because i was using his dotfiles before i have my own configuration.

$main = SUPER
$scripts = $HOME/.config/hypr/scripts
$configs = $HOME/.config/hypr/configs
source = $configs/defaults.conf

bind = CTRL ALT, Delete, exec, hyprctl dispatch exit 0 # Exit Hyprland
bind = $main, Q, killactive, # Close active (not kill)
bind = $main SHIFT, Q, exec, $scripts/KillActiveProcess.sh # Kill all active processes
# bind = $main SHIFT, N, exec, swaync-client -t -sw # swayNC notification panel #TODO: install swaync-client

bind = $main, S, exec, pkill rofi || rofi -show drun -modi drun,filebrowser,run,window # Rofi App Launcher
bind = $main, A, exec, pkill rofi || true && ags -t 'overview' # Overview
bind = $main, T, exec, $term # Launch Terminal
bind = $main, E, exec, $files # Launch File Manager
bind = $main, B, exec, xdg-open "https://"  # Default browser
# bind = $main, H, exec, $scripts/keybinds_help.sh # Launch Keybinds Help Window

# Pyprland
# bind = $main SHIFT, T, exec, pypr toggle term # Dropdown Terminal
# bind = $main, Z, exec, pypr zoom # Toggle Zoom

# Screenshots
bind = ALT, Print, exec, $scripts/ScreenShot.sh --active # Screenshot Active Window
bind = $main, Print, exec, $scripts/ScreenShot.sh --now # Screenshot Now
bind = $main CTRL, Print, exec, $scripts/ScreenShot.sh --area # Screenshot Area
bind = $main SHIFT, Print, exec, $scripts/ScreenShot.sh --swappy # Screenshot with Swappy

# Waybar
bind = $main ALT, R, exec, $scripts/Refresh.sh # Refresh waybar, swaync, rofi
bind = $main ALT, O, exec, $scripts/ChangeBlur.sh # Toggle blur settings
bind = $main ALT, L, exec, $scripts/ChangeLayout.sh # Toggle Master or Dwindle Layout
bind = $main CTRL ALT, B, exec, pkill -SIGUSR1 waybar # Toggle hide/show waybar
bind = $main CTRL, B, exec, $scripts/WaybarStyles.sh # Waybar Styles Menu
bind = $main ALT, B, exec, $scripts/WaybarLayout.sh # Waybar Layout Menu

# Workspaces Management
bind = $main SHIFT, tab, movetoworkspace, empty # Move Window to Empty Workspace and Follow
bind = $main CTRL, tab, movetoworkspacesilent, empty # Move Window to Empty Workspace Silently

# Desktop Zoom
bind = $main ALT, mouse_down, exec, hyprctl keyword cursor:zoom_factor "$(hyprctl getoption cursor:zoom_factor | awk 'NR==1 {factor = $2; if (factor < 1) {factor = 1}; print factor * 2.0}')"
bind = $main ALT, mouse_up, exec, hyprctl keyword cursor:zoom_factor "$(hyprctl getoption cursor:zoom_factor | awk 'NR==1 {factor = $2; if (factor < 1) {factor = 1}; print factor / 2.0}')" 

# Miscellaneous
# bind = $main ALT, V, exec, $scripts/ClipManager.sh # Clipboard Manager
bind = $main SHIFT, F, fullscreen # Whole fullscreen
bind = $main CTRL, F, fullscreen, 1 # Fake fullscreen
bind = $main, SPACE, togglefloating, #Float ModeR
bind = $main ALT, SPACE, exec, hyprctl dispatch workspaceopt allfloat # All Float Mode
bind = $main SHIFT, Return, exec, [float; move 15% 5%; size 70% 60%] $term # Dropdown terminal
bind = $main CTRL, O, exec, hyprctl setprop active opaque toggle # Disable opacity on active window

# Master Layout
bind = $main CTRL, D, layoutmsg, removemaster
bind = $main, I, layoutmsg, addmaster
bind = $main, J, layoutmsg, cyclenext
bind = $main, K, layoutmsg, cycleprev
bind = $main CTRL, Return, layoutmsg, swapwithmaster

# Dwindle Layout
bind = $main SHIFT, I, togglesplit # only works on dwindle layout
bind = $main, P, pseudo, # dwindle

# Works on either layout (Master or Dwindle)
bind = $main, M, exec, hyprctl dispatch splitratio 0.3

# Group
bind = $main, G, togglegroup # toggle group
bind = $main CTRL, tab, changegroupactive  # change focus to another window

# Cycle windows if floating bring to top
bind = ALT, tab, cyclenext
bind = ALT, tab, bringactivetotop  

# Special Keys / Hot Keys
bindel = , xf86audioraisevolume, exec, $scripts/Volume.sh --inc # volume up
bindel = , xf86audiolowervolume, exec, $scripts/Volume.sh --dec # volume down
bindl = , xf86AudioMicMute, exec, $scripts/Volume.sh --toggle-mic # mic mute
bindl = , xf86audiomute, exec, $scripts/Volume.sh --toggle # mute
bindl = , xf86Sleep, exec, systemctl suspend  # sleep button 
bindl = , xf86Rfkill, exec, $scripts/AirplaneMode.sh # Airplane mode

# Resize windows
binde = $main SHIFT, left, resizeactive,-50 0
binde = $main SHIFT, right, resizeactive,50 0
binde = $main SHIFT, up, resizeactive,0 -50
binde = $main SHIFT, down, resizeactive,0 50

# Move windows
bind = $main CTRL, left, movewindow, l
bind = $main CTRL, right, movewindow, r
bind = $main CTRL, up, movewindow, u
bind = $main CTRL, down, movewindow, d

# Swap windows
bind = $main ALT, left, swapwindow, l
bind = $main ALT, right, swapwindow, r
bind = $main ALT, up, swapwindow, u
bind = $main ALT, down, swapwindow, d

# Move focus with main + arrow keys
bind = $main, left, movefocus, l
bind = $main, right, movefocus, r
bind = $main, up, movefocus, u
bind = $main, down, movefocus, d

# Workspaces related
bind = $main, tab, workspace, m+1
bind = $main SHIFT, tab, workspace, m-1

# Special workspace
bind = $main SHIFT, U, movetoworkspace, special
bind = $main, U, togglespecialworkspace,

# The following mappings use the key codes to better support various keyboard layouts
# 1 is code:10, 2 is code 11, etc
# Switch workspaces with main + [0-9] 
bind = $main, code:10, workspace, 1 # NOTE: code:10 = key 1
bind = $main, code:11, workspace, 2 # NOTE: code:11 = key 2
bind = $main, code:12, workspace, 3 # NOTE: code:12 = key 3
bind = $main, code:13, workspace, 4 # NOTE: code:13 = key 4
bind = $main, code:14, workspace, 5 # NOTE: code:14 = key 5
bind = $main, code:15, workspace, 6 # NOTE: code:15 = key 6
bind = $main, code:16, workspace, 7 # NOTE: code:16 = key 7
bind = $main, code:17, workspace, 8 # NOTE: code:17 = key 8
bind = $main, code:18, workspace, 9 # NOTE: code:18 = key 9
bind = $main, code:19, workspace, 10 # NOTE: code:19 = key 0

# Move active window and follow to workspace main + SHIFT [0-9]
bind = $main SHIFT, code:10, movetoworkspace, 1 # NOTE: code:10 = key 1
bind = $main SHIFT, code:11, movetoworkspace, 2 # NOTE: code:11 = key 2
bind = $main SHIFT, code:12, movetoworkspace, 3 # NOTE: code:12 = key 3
bind = $main SHIFT, code:13, movetoworkspace, 4 # NOTE: code:13 = key 4
bind = $main SHIFT, code:14, movetoworkspace, 5 # NOTE: code:14 = key 5
bind = $main SHIFT, code:15, movetoworkspace, 6 # NOTE: code:15 = key 6
bind = $main SHIFT, code:16, movetoworkspace, 7 # NOTE: code:16 = key 7
bind = $main SHIFT, code:17, movetoworkspace, 8 # NOTE: code:17 = key 8
bind = $main SHIFT, code:18, movetoworkspace, 9 # NOTE: code:18 = key 9
bind = $main SHIFT, code:19, movetoworkspace, 10 # NOTE: code:19 = key 0
bind = $main SHIFT, bracketleft, movetoworkspace, -1 # brackets [
bind = $main SHIFT, bracketright, movetoworkspace, +1 # brackets ]

# Move active window to a workspace silently main + CTRL [0-9]
bind = $main CTRL, code:10, movetoworkspacesilent, 1 # NOTE: code:10 = key 1
bind = $main CTRL, code:11, movetoworkspacesilent, 2 # NOTE: code:11 = key 2
bind = $main CTRL, code:12, movetoworkspacesilent, 3 # NOTE: code:12 = key 3
bind = $main CTRL, code:13, movetoworkspacesilent, 4 # NOTE: code:13 = key 4
bind = $main CTRL, code:14, movetoworkspacesilent, 5 # NOTE: code:14 = key 5
bind = $main CTRL, code:15, movetoworkspacesilent, 6 # NOTE: code:15 = key 6
bind = $main CTRL, code:16, movetoworkspacesilent, 7 # NOTE: code:16 = key 7
bind = $main CTRL, code:17, movetoworkspacesilent, 8 # NOTE: code:17 = key 8
bind = $main CTRL, code:18, movetoworkspacesilent, 9 # NOTE: code:18 = key 9
bind = $main CTRL, code:19, movetoworkspacesilent, 10 # NOTE: code:19 = key 0
bind = $main CTRL, bracketleft, movetoworkspacesilent, -1 # brackets [
bind = $main CTRL, bracketright, movetoworkspacesilent, +1 # brackets ]

# Scroll through existing workspaces with main + scroll
bind = $main, mouse_down, workspace, e+1
bind = $main, mouse_up, workspace, e-1
bind = $main, period, workspace, e+1
bind = $main, comma, workspace, e-1

# Move/resize windows with main + LMB/RMB and dragging
bindm = $main, mouse:272, movewindow # NOTE: mouse:272 = left click
bindm = $main, mouse:273, resizewindow # NOTE: mouse:272 = right click